{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","context","e","setState","searchField","target","value","state","console","log","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAGaA,EAAO,SAACC,GAAD,OAElB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,YCJTC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAEvB,uBAAOC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MC0CJG,E,kDA5Cb,WAAYhB,EAAOiB,GAAU,IAAD,8BAC1B,cAAMjB,EAAOiB,IAqCfJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SApCrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALW,E,qDAW5B,WAAqB,IAAD,OAClBI,QAAQC,IAAI,oBAEZC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACV,SAAUqB,OAE1CN,QAAQC,IAAI,qB,oBAGd,WAAU,IAAD,EAEyBM,KAAKR,MAA9Bd,EAFA,EAEAA,SAAUW,EAFV,EAEUA,YAEXY,EAAmBvB,EAASwB,QAAO,SAAA7B,GAAO,OAAIA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYc,kBAEpG,OAEE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,SAASC,aAAckB,KAAKlB,eACnD,cAAC,EAAD,CAAUJ,SAAUuB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d3cc2433.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n\r\n  <div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n    <h2> {props.monster.name} </h2>\r\n    <p>{props.monster.email}</p>\r\n\r\n  </div>\r\n\r\n);\r\n","import React from \"react\";\r\nimport './card-list.styles.css'\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {\r\n        props.monsters.map(monster =>\r\n          <Card key={monster.id} monster={monster} />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n\r\n  <input type='search'\r\n         className='search'\r\n         placeholder={placeholder}\r\n         onChange={handleChange}/>\r\n\r\n)\r\n","import './App.css';\nimport {Component} from \"react\";\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n  }\n\n\n  componentDidMount() {\n    console.log(\"Retrieving Users\");\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}));\n\n    console.log(\"Retrieved Users\");\n  }\n\n  render() {\n\n    const {monsters, searchField} = this.state;\n\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search' handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}/>\n\n      </div>\n    );\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}